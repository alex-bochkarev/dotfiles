#!/bin/env bash

SETUPFILE="$HOME/.local/etc/koffer.json"
# Fail on errors
set -e
set -o pipefail

RED='\033[0;31m'
GREEN='\033[0;32m'
COLOFF='\033[0m'
ERR="${RED}ERROR:${COLOFF}"
INFO="${GREEN}INFO:${COLOFF}"

koffer_show_help(){
    echo -e "USAGE: $(basename $0) {pack | unpack | help}"
    echo "A utility to pack the necessities to make moving between machines"
    echo "easier."
    echo "Uses the following root folder: $PACKDIR"
    echo "Packs the following info:"
    echo "- PKB notes"
    echo "- PKB email notes"
    echo "- (global) org notes"
    echo "- pass database"
}

koffer_mount(){
    DEVICEUUID=$(jq -r ".UUID.device" $SETUPFILE)
    PARTUUID=$(jq -r ".UUID.partition" $SETUPFILE)
    DEVICE=$(/sbin/blkid -U $DEVICEUUID)
    PACKDIR=$(lsblk -o UUID,MOUNTPOINT | awk -v u="$PARTUUID" '$1 == u {print $2}')

    if [ ! -d "$PACKDIR" ]; then
        echo -e "${INFO} The device is not mounted. Trying to mount..."
        echo -e "${INFO} ∟ unlocking the drive ($DEVICE)..."

        if UNLOCKOUT="$(udisksctl unlock -b $DEVICE 2>&1)"; then
            DEVUNLOCKED="$(echo $UNLOCKOUT |\
                tail -n1 |\
                sed -e 's/^Unlocked \/dev\/[[:print:]]\+ as \([[:print:]]\+\).$/\1/' \
                )"
        else
            echo -e "${INFO} unlocking has failed, checking if the device was already unlocked..."
            echo "Output was: $UNLOCKOUT"
            DEVUNLOCKED="$(echo $UNLOCKOUT | grep -oP 'Device .* is already unlocked as \K.*$')"

            if [[ -z "$DEVUNLOCKED" ]]; then
                echo -e "${ERR}: failed to mount device at $DEVICE."
                exit 1
            else
                echo -e "${INFO}: success, unlocked device is at $DEVUNLOCKED"
            fi
        fi

        echo -e "${INFO} ∟ mounting $DEVUNLOCKED..."
        udisksctl mount -b $DEVUNLOCKED

        PACKDIR=$(lsblk -o UUID,MOUNTPOINT | awk -v u="$PARTUUID" '$1 == u {print $2}')

        if [ -d "$PACKDIR" ]; then
            echo -e "${INFO} ∟ success! The device is mounted at $PACKDIR"
        else
            echo -e "${ERR} mounting failed."
            exit 1
        fi
    else
        echo -e "${INFO} The device is already mounted at $PACKDIR"
    fi
}

koffer_unmount(){
    PARTDEVICE=$(/sbin/blkid -U $PARTUUID)
    echo -e "${INFO} unmounting the device ($PARTDEVICE)..."
    udisksctl unmount -b $PARTDEVICE
    udisksctl lock -b $DEVICE
    echo -e "${INFO} ✓ Unmounted and locked, safe to remove."
}

koffer_gitpush(){
    local INFOSTRING=$1
    local SRCDIR=$2
    local SRCBRANCH=$3

    echo -e "${INFO} Packing: $INFOSTRING..."
    cd "$SRCDIR"
    git fetch $REMOTENAME

    if [ -n "$(git status --porcelain)" ]; then
        git add .
        git commit -m "Saving the info from $(hostname) at $(date '+%Y-%m-%d')"
        git push $REMOTENAME $SRCBRANCH
        echo -e "${INFO} ✓ done ($INFOSTRING)"
    else
        echo -e "${INFO} No changes to commit.";
    fi
}

koffer_pushpass(){
    echo -e "${INFO} Packing the pass repo..."
    cd ~/.password-store

    if [ -n "$(pass git status --porcelain)" ]; then
        pass git push -u --all && echo -e "${INFO} ✓ done."
        echo -e "${INFO} ✓ done (password store)"
    else
        echo -e "${INFO} No changes to commit.";
    fi
}

koffer_do_pack(){
    koffer_mount
    REMOTENAME=$(jq -r ".remotename" $SETUPFILE)

    if [ -z "$REMOTENAME" ]; then
        echo -e "${ERR} Remote name not found in $SETUPFILE."
        exit 1
    fi

    koffer_gitpush "PKB notes" "$HOME/PKB/notes" "master"
    koffer_gitpush "email notes" "$HOME/PKB/email" "main"
    koffer_gitpush "org files" "$HOME/org" "main"
    koffer_pushpass

    koffer_unmount
}

koffer_do_unpack(){
    echo -e "${ERR}: NOT IMPLEMENTED!"
    exit 1

    # koffer_check_dir
    # echo -e "${INFO} Unpacking the PKB notes..."
    # cd ~/PKB/notes
    # git pull stick master
    # echo -e "${INFO} ✓ done"

    # echo -e "${INFO} Unpacking the email stuff..."
    # cd ~/PKB/email
    # git pull stick main
    # echo -e "${INFO} ✓ done."

    # echo -e "${INFO} Unpacking the pass repo..."
    # cd ~/.password-store
    # pass git pull stick master && echo -e "${INFO} ✓ done. Unmounting..."

    # koffer_unmount
}

case "$1" in
    pack) koffer_do_pack ;;
    unpack) koffer_do_unpack ;;
    open) koffer_mount ;;
    close) koffer_unmount ;;
    *) koffer_show_help ;;
esac

